meta: ~

resource_pools:
- name: vms
  cloud_properties:
    instance_type: (( meta.instance-type ))

disk_pools:
- name: disks
  disk_size: 40960
  <<: (( merge ))

networks:
- name: private
  type: manual
  subnets:
  - range: (( meta.private-network-range ))
    gateway: (( meta.private-network-gateway ))
    dns: (( meta.private-network-dns ))
    cloud_properties:
      net_id: (( meta.private-network-id ))
- name: public
  type: vip

jobs:
  bosh:
    templates:  
    - {name: (( meta.cpi-name )), release: (( meta.cpi-release ))}
    - {name: registry, release: bosh}
    
    networks:
    - name: private
      static_ips: (( meta.private-static-ips ))
      default: [dns, gateway]
    - name: public
      static_ips: (( meta.public-static-ips ))

    properties:
      openstack: &openstack
        auth_url: (( meta.auth-url ))
        tenant: (( meta.tenant ))
        username: (( meta.username ))
        api_key: (( meta.api-key ))
        default_key_name: (( meta.default-key-name ))
        default_security_groups: (( meta.default-security-groups ))

      ntp: &ntp (( meta.ntp ))

      postgres: &db
        listen_address: 127.0.0.1
        host: 127.0.0.1
        user: postgres
        password: postgres-password
        database: bosh
        adapter: postgres

      registry:
        address: (( meta.private-static-ips.[0] ))
        host: (( meta.private-static-ips.[0] ))
        db: *db
        http: {user: admin, password: admin, port: 25777}
        username: admin
        password: admin
        port: 25777

      director:
        max_threads: 3
        enable_snapshots: (( meta.enable-snapshots || "false" ))
        snapshot_schedule: (( meta.snapshot-schedule || nil ))

cloud_provider:
  properties:
    openstack: *openstack
    ntp: *ntp

  ssh_tunnel:
    host: (( meta.public-static-ips.[0] ))
    port: 22
    user: vcap
    private_key: (( meta.private-key ))